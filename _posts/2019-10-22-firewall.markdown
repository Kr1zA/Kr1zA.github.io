---
layout: post
title:  firewall
date:   2019-10-22 
tags:   [AOS, firewall]
---
## [Iptables](https://www.netfilter.org/ "Iptables")

Pekné [video](https://www.youtube.com/watch?v=kDEX1HXybrU) na základné vysvetlenie, na čo je dobrý firewall. 

### Z oficialnej stranky:

netfilter.org is home to the software of the packet filtering framework inside the Linux 2.4.x and later kernel series. Software commonly associated with netfilter.org is iptables.

Software inside this framework enables packet filtering, network address [and port] translation (NA[P]T) and other packet mangling. It is the re-designed and heavily improved successor of the previous Linux 2.2.x ipchains and Linux 2.0.x ipfwadm systems.

### Cesta packetu
Pakety prechádzajú pri svojej ceste tabuľkami. Popíšeme si štyri (hlavné?) tabuľky:
 - filter – je východzia tabuľka určená na uchovávanie pravidiel filtrovania paketov, ktorá obsahuje tri reťaze:
   - INPUT (pakety cielené do lokálneho stroja),
   - FORWARD (pakety smerované cez stroj – počítač funguje ako smerovač) a
   - OUTPUT (lokálne generované pakety);
 - nat – je tabuľka používaná len paketmi vytvárajúcimi nové spojenie a pozostáva tiež z troch reťazí:
   - PREROUTING (úprava paketov hneď po vstupe),
   - OUTPUT (úprava lokálne generovaných paketov) a
   - POSTROUTING (úprava paketov tesne pred výstupom);
 - mangle – je tabuľke na špeciálnu manipuláciu s paketmi a má päť reťazí:
   - PREROUTING (úprava prichádzajúcich paketov pred smerovaním),
   - OUTPUT (úprava lokálne generovaných paketov pred smerovaním),
   - INPUT (úprava paketov cielených do lokálneho stroja),
   - FORWARD (úprava paketov smerovaných cez stroj) a
   - POSTROUTING (úprava paketov tesne pred výstupom); 
 - raw – je tabuľka na výnimky zo sledovania stavu a je spracovaná ako prvá. V tabuľke sú dve reťaze:
   - PREROUTING (pakety vstupujúce cez sieťové rozhranie) a
   - OUTPUT (lokálne generované pakety). 
   
Vo všeobecnosti neviem o tom, aby bola struktúra presne daná. Napríklad, je možné vytvárať vlastné reťazce pomocou:

```
iptables -N whitelist
iptables -N blacklist
```

Nasledujúci diagram znázornuje cestu packetu v rámci linuxoveho stroja:
[![diagram retazcov]({{site.baseurl}}/img/cestaPacketu.jpg)](https://www.booleanworld.com/depth-guide-iptables-linux-firewall/ "diagram retazcov")

Alebo iný obrázok:
[![diagram retazcov]({{site.baseurl}}/img/cestaPacketu2.png)](https://gist.github.com/DominicBreuker/c948d938adc9257585fc2f40d50b96c4 "diagram retazcov")

### Čo môžeme nastavovať?

Pomocou iptables môžeme nastavovať pravidlá, ktoré budu hovoriť, čo sa má s paketmi robiť. 

Viac sa dozviete [tu](https://pavolsokol.science.upjs.sk/index.php/sk/teaching/lectures-seminars/administracia-operacnych-systemov/76-firewall).

### Čo sme robili na hodine?

Ukázali sme si základné možnosti filtrovania packetov na Linuxe.

  * nainštalovali sme na klientovi ssh server 
    * `apt install openssh`
  * na klientovi sme nastavovali firewall
  * vsetko sme zakázali politikou DROP
    * `iptables -P INPUT DROP`
    * `iptables -P OUTPUT DROP`
    * `iptables -P FORWARD DROP`
  * povolili sme SSH
    * `iptables -A INPUT -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT`
    * `iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT`
  * povolili sme pingovanie
    * `iptables -A INPUT -p icmp --icmp-type echo-request -j ACCEPT`
    * `iptables -A OUTPUT -p icmp --icmp-type echo-reply -j ACCEPT`
  * povolili sme DNS
    * `iptables -A OUTPUT -p udp -o eth0 --dport 53 -j ACCEPT`
    * `iptables -A INPUT -p udp -i eth0 --sport 53 -j ACCEPT`
  * povolili sme port 80
    * `iptables -A OUTPUT -p tcp -o eth0 --dport 80 -j ACCEPT`
    * `iptables -A INPUT -p tcp -i eth0 --sport 80 -j ACCEPT`
  * hrali sme sa s logovaním
    * `iptables -A INPUT -s 192.168.0.1 -j LOG --log-prefix "Log-test: "`
    * následne sme prehľadali `/var/log`, no logy sme nenašli. Vysvetlenie je také, ze predchádzajúce pravidlá, ktoré sme nastavili obsahujú -j (jump) a teda sa k tomuto pravidlu packety nedostali. Pravidlo sme teda presunuli v reťazi vyššie.
  * nastavili sme perzistentnosť firewallu
    * `ptables-save > /etc/iptables.rules # ulozenie pravidiel do suboru`
    * už stačí len načítať konfiguráciu pri štarte napríklad pridaním riadku `pre-up iptables-restore < /etc/iptables.rules` pod `riadok iface lo inet loopback` v súbore `/etc/network/interfaces`
  
  * zabudol som spomenúť, že ak by sme chceli spustiť nejakú službu lokálne (napr. programujeme web stránku a testujeme ju lokálne), tak by bolo dobré povolit trafik na loopbacku, inak nám to nepojde:
    * `sudo iptables -A INPUT -i lo -j ACCEPT`
    * `sudo iptables -A OUTPUT -o lo -j ACCEPT`

[Prezentácia](https://github.com/Kr1zA/Kr1zA.github.io/blob/master/pdf/firewall.pdf) použitá na hodine. 

Viac o možnostiach iptables sa dozviete na [manuálových stránkach](https://linux.die.net/man/8/iptables).

### Odkazy:

[Seriál Vše o iptables](https://www.root.cz/serialy/vse-o-iptables/ "Seriál Vše o iptables")

[Seriál Stavíme firewall](https://www.root.cz/serialy/stavime-firewall/ "Seriál Stavíme firewall")

[Nie zlý cheat sheet](https://gist.github.com/DominicBreuker/c948d938adc9257585fc2f40d50b96c4)

[Ďalší diagram](https://www.docum.org/docum.org/kptd/)

